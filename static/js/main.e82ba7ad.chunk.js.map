{"version":3,"sources":["components/buttons/Icon.js","components/buttons/Btn.js","components/navs/TopNav.js","components/navs/BottomNav.js","data/API.js","components/pages/Account.js","components/pages/Email.js","components/pages/Home.js","App.js","index.js"],"names":["SerachComp","show","className","allowClear","placeholder","style","width","styles","ml_1","marginLeft","mr_1","marginRight","searchBox","display","alignItems","Icon","badgeCount","icon","text","useState","showInput","setShowInput","iconComp","ReloadOutlined","onClick","window","location","reload","SearchOutlined","SettingOutlined","RightOutlined","LeftCircleOutlined","InboxOutlined","MailOutlined","DeleteOutlined","FileOutlined","FolderOutlined","SendOutlined","FrownOutlined","PaperClipOutlined","RollbackOutlined","chooseIcon","direction","Object","assign","Btn","size","type","handleClick","console","log","hasIcon","hasText","shape","rightIcons","withRouter","unReads","backgroundColor","leftContent","to","rightContent","map","i","Modal","alert","props","pathname","isOnAccountPage","setIsOnAccountPage","isOnEmailPage","setIsOnEmailPage","showModal","setShowModal","nav1","nav2","nav3","leftComps","useEffect","includes","position","bottom","visible","transparent","maskClosable","closable","onClose","title","height","overflow","paddingTop","accounts","getRandomNum","Math","floor","random","getRandomMail","emails","push","_id","faker","datatype","uuid","commerce","productName","body","productDescription","from","name","findName","email","lorem","paragraph","time","date","recent","isRead","boolean","thumb","image","avatar","attachments","data","accountName","userName","internet","userEmail","userEmails","0","1","2","3","4","5","6","makeInitialAccounts","API","getInitialAccounts","Promise","reslove","reject","length","getAccount","user_index","resolve","getEmail","account_id","email_id","values","forEach","account","Panel","List","Item","Collapse","Account","setAccount","setUserEmail","accountLoaded","setaccountLoaded","undefined","activePanel","setActivePanel","id","useParams","then","res","catch","err","accordion","expandIconPosition","onChange","e","keys","k","folder_id","folderName","header","forceRender","padding","full","Header","thumbStyle","borderRadius","extra","Date","toLocaleTimeString","Body","Footer","align","justify","Email","margin","fontSize","Home","a","filter","user_id","App","setUnReads","count","unReadEmails","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e82ba7ad.chunk.js","sourcesContent":["import {\n  MailOutlined,\n  ReloadOutlined,\n  RightOutlined,\n  SearchOutlined,\n  DeleteOutlined,\n  InboxOutlined,\n  FolderOutlined,\n  FileOutlined,\n  SendOutlined,\n  FrownOutlined,\n  SettingOutlined,\n  LeftCircleOutlined,\n  RollbackOutlined,\n  PaperClipOutlined,\n} from \"@ant-design/icons\";\nimport { Input, Space } from \"antd\";\nimport { Badge } from \"antd-mobile\";\nimport React, { useState } from \"react\";\n\nconst SerachComp = ({ show }) => {\n  return (\n    <Input\n      className={show ? \"fadeIn\" : \"\"}\n      allowClear\n      placeholder=\"input search text\"\n      style={{ width: 150 }}\n    />\n  );\n};\n\nconst Icon = ({ badgeCount, icon, text = null }) => {\n  const [showInput, setShowInput] = useState(false);\n  const iconComp = chooseIcon(icon);\n\n  function chooseIcon(icon) {\n    switch (icon) {\n      case \"reload\":\n        return (\n          <ReloadOutlined\n            onClick={() => {\n              window.location.reload();\n            }}\n            style={{ ...styles.ml_1 }}\n          />\n        );\n      case \"search\":\n        return (\n          <SearchOutlined\n            onClick={() => {\n              setShowInput(!showInput);\n            }}\n            style={{ ...styles.ml_1 }}\n          />\n        );\n      case \"settings\":\n        return <SettingOutlined style={{ ...styles.ml_1 }} />;\n      case \"rightOutline\":\n        return <RightOutlined style={{ ...styles.ml_1 }} />;\n      case \"leftOutline\":\n        return <LeftCircleOutlined style={{ ...styles.ml_1 }} />;\n      case \"inbox\":\n        return <InboxOutlined style={{ ...styles.mr_1 }} />;\n      case \"mail\":\n        return <MailOutlined style={{ ...styles.mr_1 }} />;\n      case \"trash\":\n        return <DeleteOutlined style={{ ...styles.mr_1 }} />;\n      case \"trash-m0\":\n        return <DeleteOutlined />;\n      case \"draft\":\n        return <FileOutlined style={{ ...styles.mr_1 }} />;\n      case \"folder\":\n        return <FolderOutlined style={{ ...styles.mr_1 }} />;\n      case \"folder-m0\":\n        return <FolderOutlined />;\n      case \"sent\":\n        return <SendOutlined style={{ ...styles.mr_1 }} />;\n      case \"junk\":\n        return <FrownOutlined style={{ ...styles.mr_1 }} />;\n      case \"clip\":\n        return <PaperClipOutlined style={{ ...styles.mr_1 }} />;\n      case \"rollBack\":\n        return <RollbackOutlined style={{ ...styles.mr_1 }} />;\n      case \"rollBack-m0\":\n        return <RollbackOutlined />;\n      default:\n        return <></>;\n    }\n  }\n\n  const getStyles = () => {\n    if (showInput) {\n      return Object.assign(styles.ml_1, styles.searchBox);\n    } else {\n      return { ...styles.ml_1 };\n    }\n  };\n\n  return (\n    <Space direction=\"horizontal\">\n      {showInput && <SerachComp show={showInput} />}\n      <Badge text={badgeCount} style={getStyles()}>\n        {text && text}\n        {iconComp}\n      </Badge>\n    </Space>\n  );\n};\n\nconst styles = {\n  ml_1: {\n    marginLeft: \"16px\",\n  },\n  mr_1: {\n    marginRight: \"16px\",\n  },\n  searchBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n};\n\nexport default Icon;\n","import { Button } from \"antd\";\nimport React from \"react\";\n\nconst Btn = ({\n  size = \"default\",\n  icon,\n  text,\n  style,\n  type = \"primary\",\n  handleClick = () => console.log(\"you clicked me\"),\n}) => {\n  const hasIcon = icon ? true : false;\n  const hasText = text ? true : false;\n\n  return (\n    <Button\n      onClick={handleClick}\n      size={size}\n      style={{ ...style }}\n      shape=\"round\"\n      type={type}\n    >\n      {hasIcon && icon}\n      {hasText && text}\n    </Button>\n  );\n};\n\nexport default Btn;\n","import { NavBar } from \"antd-mobile\";\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Icon } from \"../buttons\";\n\nconst rightIcons = [\"search\", \"reload\", \"settings\"];\n\nconst TopNav = ({ unReads }) => {\n  // const [isOnEmailPage, setIsOnAccountPage] = useState(\n  //   props.location.pathname.includes(\"/account\")\n  // );\n\n  // const nav1 = <Btn text=\"Account\" icon={<Icon icon=\"mail\" />} />;\n  // const nav2 = <Btn text=\"Folder\" icon={<Icon icon=\"folder\" />} />;\n  // const leftComps = isOnEmailPage ? nav2 : nav1;\n\n  // useEffect(() => {\n  //   setIsOnAccountPage(props.location.pathname.includes(\"/account\"));\n  // });\n  return (\n    <NavBar\n      style={{ backgroundColor: \"#000\" }}\n      leftContent={\n        <Link to={`/home`}>\n          <Icon badgeCount={unReads} text=\"JQ Mail\" />\n        </Link>\n      }\n      rightContent={rightIcons.map((icon, i) => {\n        return <Icon key={i} icon={icon} />;\n      })}\n    />\n  );\n};\n\nexport default withRouter(TopNav);\n","import { NavBar, Modal } from \"antd-mobile\";\nimport { Space } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Btn, Icon } from \"../buttons\";\n\nconst alert = Modal.alert;\n\nconst BottomNav = (props) => {\n  const { pathname } = props.location;\n\n  const [isOnAccountPage, setIsOnAccountPage] = useState(false);\n\n  const [isOnEmailPage, setIsOnEmailPage] = useState(false);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const nav1 = <Btn text=\"Account\" icon={<Icon icon=\"mail\" />} />;\n  const nav2 = <Btn text=\"Folder\" icon={<Icon icon=\"folder\" />} />;\n  const nav3 = (\n    <Space direction=\"horizontal\">\n      <Btn icon={<Icon icon=\"rollBack-m0\" />} />\n      <Btn icon={<Icon icon=\"folder-m0\" />} />\n      <Btn\n        icon={<Icon icon=\"trash-m0\" />}\n        handleClick={() => setShowModal(!showModal)}\n      />\n    </Space>\n  );\n\n  const leftComps = isOnAccountPage ? nav2 : isOnEmailPage ? nav3 : nav1;\n\n  useEffect(() => {\n    if (\n      pathname.includes(\"/account/0/\") ||\n      pathname.includes(\"/account/1/\") ||\n      pathname.includes(\"/account/2/\")\n    ) {\n      setIsOnEmailPage(true);\n      setIsOnAccountPage(false);\n    } else if (pathname.includes(\"/account\")) {\n      setIsOnAccountPage(true);\n      setIsOnEmailPage(false);\n    }\n  });\n\n  console.log(\"what is it: \", showModal);\n\n  return (\n    <>\n      <NavBar\n        style={{\n          backgroundColor: \"#e4e8ec\",\n          position: \"fixed\",\n          bottom: 0,\n          width: \"100%\",\n        }}\n        leftContent={leftComps}\n        rightContent={<Btn text=\"Edit\" />}\n      />\n\n      <Modal\n        visible={showModal}\n        transparent\n        maskClosable={true}\n        closable={true}\n        onClose={() => {\n          console.log(\"close modal\");\n          setShowModal(false);\n        }}\n        title=\"Delete this message?\"\n      >\n        <div style={{ height: 200, overflow: \"scroll\" }}>\n          <header>\n            Once deleted, a message can be recovered from the the Trash.\n          </header>\n          <Space\n            direction=\"vertical\"\n            style={{ paddingTop: \"32px\", width: \"100%\" }}\n          >\n            <hr />\n            <Btn\n              text=\"Delete Message\"\n              style={{ width: \"100%\" }}\n              handleClick={() => setShowModal(!showModal)}\n            />\n            <Btn\n              text=\"Cancel\"\n              type=\"\"\n              style={{\n                width: \"100%\",\n                backgroundColor: \"rgb(228, 232, 236)\",\n              }}\n              handleClick={() => setShowModal(!showModal)}\n            />\n          </Space>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default withRouter(BottomNav);\n","import faker from \"faker\";\nlet accounts = [];\n\nconst getRandomNum = () => {\n  return Math.floor(Math.random() * (10 - 2) + 2);\n};\n\nconst getRandomMail = () => {\n  let emails = [];\n\n  for (let i = 0; i < getRandomNum(); i++) {\n    emails.push({\n      _id: faker.datatype.uuid(),\n      title: faker.commerce.productName(),\n      body: faker.commerce.productDescription(),\n      from: faker.name.findName(),\n      email: faker.lorem.paragraph(),\n      time: faker.date.recent(),\n      isRead: faker.datatype.boolean(),\n      thumb: faker.image.avatar(),\n      attachments: getRandomNum(),\n    });\n  }\n\n  return emails;\n};\n\nfunction getEmails() {\n  return {\n    0: {\n      name: \"Inbox\",\n      icon: \"inbox\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    1: {\n      name: \"Drafts\",\n      icon: \"draft\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    2: {\n      name: \"Sent\",\n      icon: \"sent\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    3: {\n      name: \"Trash\",\n      icon: \"trash\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    4: {\n      name: \"Junk\",\n      icon: \"junk\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    5: {\n      name: \"My Folder\",\n      icon: \"folder\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    6: {\n      name: \"Person Folder\",\n      icon: \"folder\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n  };\n}\n\nconst makeAccount = () => {\n  return {\n    _id: faker.datatype.uuid(),\n    accountName: faker.name.findName(),\n    userName: faker.internet.userName(),\n    userEmail: faker.internet.email(),\n    userEmails: getEmails(),\n  };\n};\n\nfunction makeInitialAccounts() {\n  let data = [];\n  for (let i = 0; i < 3; i++) {\n    data.push(makeAccount());\n  }\n\n  accounts = [...data];\n\n  console.log(\"API ACCOUNTS :\", accounts);\n}\n\nmakeInitialAccounts();\n\nconst API = {\n  getInitialAccounts: () => {\n    return new Promise((reslove, reject) => {\n      if (accounts.length > 0) {\n        reslove(accounts);\n      } else {\n        reject(\"Error occured when calling getAccounts\");\n      }\n    });\n  },\n\n  getAccount: (user_index) => {\n    return new Promise((resolve, reject) => {\n      if (user_index) {\n        resolve(accounts[user_index]);\n      } else {\n        reject(\"Error with handleAccount()\");\n      }\n    });\n  },\n\n  getEmail: (account_id, email_id) => {\n    return new Promise((resolve, reject) => {\n      if (account_id && email_id) {\n        let data = null;\n\n        Object.values(accounts[account_id].userEmails).forEach((account) => {\n          // console.log(\"account: \", account);\n          Object.values(account.emails).forEach((email) => {\n            // console.log(\"email: \", email);\n            if (email._id === email_id) {\n              data = email;\n            } else {\n              return;\n            }\n          });\n        });\n\n        console.log(\"data\", data);\n        resolve(data);\n      } else {\n        reject(\"Error with getEmailById\");\n      }\n    });\n  },\n};\n\nexport default API;\n","import { Collapse, Space, Spin, Row, Col } from \"antd\";\nimport { Card, List, WhiteSpace } from \"antd-mobile\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport API from \"../../data/API\";\nimport { Btn, Icon } from \"../buttons\";\nconst Item = List.Item;\n\nconst { Panel } = Collapse;\n\nconst Account = (props) => {\n  const [account, setAccount] = useState({});\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [accountLoaded, setaccountLoaded] = useState(false);\n  const [activePanel, setActivePanel] = useState(undefined);\n\n  const { id } = useParams();\n  const route = `/account/${id}`;\n\n  useEffect(() => {\n    API.getAccount(id)\n      .then((res) => {\n        setAccount(res);\n        setUserEmail(res.userEmail);\n        setaccountLoaded(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    return () => {\n      setAccount([]);\n    };\n  }, []);\n\n  return (\n    <>\n      {accountLoaded ? (\n        <Collapse\n          accordion\n          id=\"collapse\"\n          expandIconPosition=\"right\"\n          onChange={(e) => {\n            console.log(e);\n            setActivePanel(e);\n          }}\n        >\n          {Object.keys(account.userEmails).map((k) => {\n            const emails = account.userEmails[k].emails;\n            const folder_id = account.userEmails[k]._id;\n            const folderName = account.userEmails[k].name;\n            const icon = account.userEmails[k].icon;\n\n            return (\n              <Panel\n                key={folder_id}\n                className={activePanel === folder_id ? \"activePanel\" : \"\"}\n                header={\n                  <div>\n                    <Icon icon={icon} />\n                    {folderName}\n                  </div>\n                }\n                forceRender={true}\n                style={{ padding: \"0px\" }}\n              >\n                {emails.map((email) => {\n                  return (\n                    <div key={email._id}>\n                      <WhiteSpace size=\"lg\" />\n                      <Card full>\n                        <Card.Header\n                          title={<h4>{email.title}</h4>}\n                          thumb={email.thumb}\n                          thumbStyle={{\n                            width: \"32px\",\n                            height: \"32px\",\n                            borderRadius: \"50%\",\n                          }}\n                          extra={\n                            <h6>{new Date(email.time).toLocaleTimeString()}</h6>\n                          }\n                        />\n                        <Card.Body>\n                          <div>{email.body}</div>\n                        </Card.Body>\n                        <Card.Footer\n                          extra={\n                            <Link\n                              to={{ pathname: `/account/${id}/${email._id}` }}\n                            >\n                              <Btn text=\"View\" />\n                            </Link>\n                          }\n                        />\n                      </Card>\n                    </div>\n                  );\n                })}\n              </Panel>\n            );\n          })}\n        </Collapse>\n      ) : (\n        <Row align=\"middle\" justify=\"center\" style={{ height: \"100vh\" }}>\n          <Col>\n            <Spin size=\"large\" />\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport API from \"../../data/API\";\nimport { Collapse, Space, Spin, Row, Col, Button } from \"antd\";\n\nimport { Card, List, WhiteSpace, Badge } from \"antd-mobile\";\nimport { Btn, Icon } from \"../buttons\";\n\nconst Email = () => {\n  const { id } = useParams();\n  const { email_id } = useParams();\n\n  const [account, setAccount] = useState({});\n  const [accountLoaded, setaccountLoaded] = useState(false);\n\n  console.log(\"id: \", id);\n  console.log(\"email_id: \", email_id);\n\n  useEffect(() => {\n    API.getEmail(id, email_id)\n      .then((res) => {\n        console.log(res);\n        setAccount(res);\n        setaccountLoaded(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    return () => {\n      setAccount([]);\n    };\n  }, []);\n\n  return (\n    <>\n      {accountLoaded ? (\n        <Row align=\"top\" justify=\"center\" style={{ height: \"100vh\" }}>\n          <Col>\n            <Card full>\n              <Card.Header\n                style={{ backgroundColor: \"rgb(228, 232, 236)\" }}\n                title={\n                  <Space\n                    direction=\"vertical\"\n                    style={{\n                      width: \"250px\",\n                    }}\n                  >\n                    <h3>{account.title}</h3>\n                    <h5>{new Date(account.time).toLocaleTimeString()}</h5>\n                  </Space>\n                }\n                extra={\n                  <Space>\n                    <Badge>{account.attachments}</Badge>\n                    <Icon icon=\"clip\" />\n                  </Space>\n                }\n              />\n              <Card.Header\n                title={\n                  <Space direction=\"horizontal\">\n                    <h4 style={{ margin: \"0px\" }}>From: </h4>\n                    <Button\n                      shape=\"round\"\n                      style={{ backgroundColor: \"rgb(228, 232, 236)\" }}\n                    >\n                      <h4>{account.from}</h4>\n                    </Button>\n                  </Space>\n                }\n                extra={\n                  <Space>\n                    <Icon icon=\"rightOutline\" text=\"Details\" />\n                  </Space>\n                }\n              />\n              <Card.Body>\n                <p style={{ fontSize: \"20px\" }}>{account.body}</p>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      ) : (\n        <Row align=\"middle\" justify=\"center\" style={{ height: \"100vh\" }}>\n          <Col>\n            <Spin size=\"large\" />\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default Email;\n","import { RightOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { Button, Space } from \"antd\";\nimport { Badge, List } from \"antd-mobile\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Item = List.Item;\n\nconst Home = ({ accounts, handleClick }) => {\n  return (\n    <div>\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <List>\n          {accounts.map((a, i) => {\n            return (\n              <Item\n                extra={\n                  <Space>\n                    <Badge>\n                      {\n                        a.userEmails[0].emails.filter((e) => {\n                          return e.isRead === false;\n                        }).length\n                      }\n                    </Badge>\n\n                    <Link to={{ pathname: `/account/${i}` }}>\n                      <Button\n                        onClick={handleClick}\n                        type=\"primary\"\n                        shape=\"round\"\n                        icon={<RightOutlined />}\n                        size=\"small\"\n                        data={i}\n                      />\n                    </Link>\n                  </Space>\n                }\n                key={a._id}\n                user_id={a._id}\n                name={a.user_id}\n              >\n                <MailOutlined style={{ marginRight: \"16px\" }} />\n\n                {a.userEmail}\n              </Item>\n            );\n          })}\n        </List>\n      </Space>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { BottomNav, TopNav } from \"./components/navs\";\nimport { Account, Home, Email } from \"./components/pages\";\n\nimport \"./css/App.css\";\nimport API from \"./data/API\";\n\nfunction App(props) {\n  const [unReads, setUnReads] = useState(0);\n  const [accounts, setAccount] = useState([]);\n\n  useEffect(() => {\n    API.getInitialAccounts()\n      .then((res) => {\n        setAccount(res);\n      })\n      .catch((err) => console.log(err));\n    return () => {\n      setAccount([]);\n    };\n  }, []);\n\n  useEffect(() => {\n    let count = 0;\n    let unReadEmails = [];\n    accounts.forEach((a) => {\n      unReadEmails = a.userEmails[0].emails.filter((email) => {\n        return email.isRead === false;\n      });\n      count += unReadEmails.length;\n    });\n\n    setUnReads(count);\n  }, [accounts]);\n\n  console.log(props);\n\n  return (\n    <Router>\n      <div>\n        <TopNav unReads={unReads} />\n        <Switch>\n          <Route path=\"/account/:id/:email_id\">\n            <Email />\n          </Route>\n          <Route path=\"/account/:id\">\n            <Account />\n          </Route>\n          <Route path=\"/home\">\n            <Home accounts={accounts} />\n          </Route>\n          <Route path=\"/\">\n            <Home accounts={accounts} />\n          </Route>\n        </Switch>\n        <BottomNav />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport \"antd-mobile/dist/antd-mobile.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}