{"version":3,"sources":["components/buttons/Icon.js","components/buttons/Btn.js","components/navs/TopNav.js","components/navs/BottomNav.js","data/API.js","components/pages/Account.js","components/pages/Home.js","App.js","index.js"],"names":["SerachComp","show","className","allowClear","placeholder","style","width","styles","ml_1","marginLeft","mr_1","marginRight","searchBox","display","alignItems","Icon","badgeCount","icon","text","useState","showInput","setShowInput","iconComp","ReloadOutlined","onClick","window","location","reload","SearchOutlined","SettingOutlined","RightOutlined","MailOutlined","chooseIcon","direction","Object","assign","Btn","size","hasIcon","hasText","shape","type","rightIcons","TopNav","unReads","backgroundColor","leftContent","to","rightContent","map","i","BottomNav","position","bottom","accounts","getRandomMail","emails","Math","random","push","_id","faker","datatype","uuid","title","commerce","productName","body","productDescription","from","name","findName","email","lorem","paragraph","time","date","recent","isRead","boolean","thumb","image","avatar","data","accountName","userName","internet","userEmail","userEmails","0","1","2","3","4","5","6","console","log","makeInitialAccounts","API","getInitialAccounts","Promise","reslove","reject","length","getAccount","user_index","resolve","Panel","List","Item","Collapse","Account","props","account","setAccount","setUserEmail","accountLoaded","setaccountLoaded","undefined","activePanel","setActivePanel","id","useParams","useEffect","then","res","catch","err","accordion","expandIconPosition","onChange","e","keys","k","folder_id","folderName","header","forceRender","padding","full","Header","thumbStyle","height","borderRadius","extra","Date","toLocaleTimeString","Body","Footer","pathname","Home","handleClick","a","filter","user_id","App","setUnReads","count","unReadEmails","forEach","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.848faf92.chunk.js","sourcesContent":["import {\n  MailOutlined,\n  ReloadOutlined,\n  RightOutlined,\n  SearchOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { Input, Space } from \"antd\";\nimport { Badge } from \"antd-mobile\";\nimport React, { useState } from \"react\";\n\nconst SerachComp = ({ show }) => {\n  return (\n    <Input\n      className={show ? \"fadeIn\" : \"\"}\n      allowClear\n      placeholder=\"input search text\"\n      style={{ width: 150 }}\n    />\n  );\n};\n\nconst Icon = ({ badgeCount, icon, text = null }) => {\n  const [showInput, setShowInput] = useState(false);\n  const iconComp = chooseIcon(icon);\n\n  function chooseIcon(icon) {\n    switch (icon) {\n      case \"reload\":\n        return (\n          <ReloadOutlined\n            onClick={() => {\n              window.location.reload();\n            }}\n            style={{ ...styles.ml_1 }}\n          />\n        );\n      case \"search\":\n        return (\n          <SearchOutlined\n            onClick={() => {\n              setShowInput(!showInput);\n            }}\n            style={{ ...styles.ml_1 }}\n          />\n        );\n      case \"settings\":\n        return <SettingOutlined style={{ ...styles.ml_1 }} />;\n      case \"rightOutline\":\n        return <RightOutlined style={{ ...styles.ml_1 }} />;\n      case \"mail\":\n        return <MailOutlined style={{ ...styles.mr_1 }} />;\n      default:\n        return <></>;\n    }\n  }\n\n  const getStyles = () => {\n    if (showInput) {\n      return Object.assign(styles.ml_1, styles.searchBox);\n    } else {\n      return { ...styles.ml_1 };\n    }\n  };\n\n  return (\n    <Space direction=\"horizontal\">\n      {showInput && <SerachComp show={showInput} />}\n      <Badge text={badgeCount} style={getStyles()}>\n        {text && text}\n        {iconComp}\n      </Badge>\n    </Space>\n  );\n};\n\nconst styles = {\n  ml_1: {\n    marginLeft: \"16px\",\n  },\n  mr_1: {\n    marginRight: \"16px\",\n  },\n  searchBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n};\n\nexport default Icon;\n","import { Button } from \"antd\";\nimport React from \"react\";\n\nconst Btn = ({ size = \"default\", icon, text, style }) => {\n  const hasIcon = icon ? true : false;\n  const hasText = text ? true : false;\n\n  return (\n    <Button size={size} style={{ ...style }} shape=\"round\" type=\"primary\">\n      {hasIcon && icon}\n      {hasText && text}\n    </Button>\n  );\n};\n\nexport default Btn;\n","import { NavBar } from \"antd-mobile\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"../buttons\";\n\nconst rightIcons = [\"search\", \"reload\", \"settings\"];\n\nconst TopNav = ({ unReads }) => {\n  return (\n    <NavBar\n      style={{ backgroundColor: \"#000\" }}\n      leftContent={\n        <Link to={`/home`}>\n          <Icon badgeCount={unReads} text=\"JQ Mail\" />\n        </Link>\n      }\n      rightContent={rightIcons.map((icon, i) => {\n        return <Icon key={i} icon={icon} />;\n      })}\n    />\n  );\n};\n\nexport default TopNav;\n","import { NavBar } from \"antd-mobile\";\nimport React from \"react\";\nimport { Btn, Icon } from \"../buttons\";\n\nconst BottomNav = () => {\n  return (\n    <NavBar\n      style={{\n        backgroundColor: \"#e4e8ec\",\n        position: \"fixed\",\n        bottom: 0,\n        width: \"100%\",\n      }}\n      leftContent={<Btn text=\"Account\" icon={<Icon icon=\"mail\" />} />}\n      rightContent={<Btn text=\"Edit\" />}\n    />\n  );\n};\n\nexport default BottomNav;\n","import faker from \"faker\";\nlet accounts = [];\n\nconst getRandomNum = () => {\n  return Math.random() * (10 - 2) + 2;\n};\n\nconst getRandomMail = () => {\n  let emails = [];\n\n  for (let i = 0; i < getRandomNum(); i++) {\n    emails.push({\n      _id: faker.datatype.uuid(),\n      title: faker.commerce.productName(),\n      body: faker.commerce.productDescription(),\n      from: faker.name.findName(),\n      email: faker.lorem.paragraph(),\n      time: faker.date.recent(),\n      isRead: faker.datatype.boolean(),\n      thumb: faker.image.avatar(),\n    });\n  }\n\n  return emails;\n};\n\nfunction getEmails() {\n  return {\n    0: {\n      name: \"Inbox\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    1: {\n      name: \"Drafts\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    2: {\n      name: \"Sent\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    3: {\n      name: \"Trash\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    4: {\n      name: \"Junk\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    5: {\n      name: \"My Folder\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n    6: {\n      name: \"Person Folder\",\n      emails: getRandomMail(),\n      _id: faker.datatype.uuid(),\n    },\n  };\n}\n\nconst makeAccount = () => {\n  return {\n    _id: faker.datatype.uuid(),\n    accountName: faker.name.findName(),\n    userName: faker.internet.userName(),\n    userEmail: faker.internet.email(),\n    userEmails: getEmails(),\n  };\n};\n\nfunction makeInitialAccounts() {\n  let data = [];\n  for (let i = 0; i < 3; i++) {\n    data.push(makeAccount());\n  }\n\n  accounts = [...data];\n\n  console.log(\"API ACCOUNTS :\", accounts);\n}\n\nmakeInitialAccounts();\n\nconst API = {\n  getInitialAccounts: () => {\n    return new Promise((reslove, reject) => {\n      if (accounts.length > 0) {\n        reslove(accounts);\n      } else {\n        reject(\"Error occured when calling getAccounts\");\n      }\n    });\n  },\n\n  getAccount: (user_index) => {\n    return new Promise((resolve, reject) => {\n      if (user_index) {\n        resolve(accounts[user_index]);\n      } else {\n        reject(\"Error with handleAccount()\");\n      }\n    });\n  },\n};\n\nexport default API;\n","import { Collapse, Spin } from \"antd\";\nimport { Card, List, WhiteSpace } from \"antd-mobile\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport API from \"../../data/API\";\nimport { Btn } from \"../buttons\";\nconst Item = List.Item;\n\nconst { Panel } = Collapse;\n\nconst Account = (props) => {\n  const [account, setAccount] = useState({});\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [accountLoaded, setaccountLoaded] = useState(false);\n  const [activePanel, setActivePanel] = useState(undefined);\n\n  const { id } = useParams();\n  const route = `/account/${id}`;\n\n  useEffect(() => {\n    API.getAccount(id)\n      .then((res) => {\n        setAccount(res);\n        setUserEmail(res.userEmail);\n        setaccountLoaded(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    return () => {\n      setAccount([]);\n    };\n  }, []);\n\n  console.log(\"activePanel: \", activePanel);\n\n  return (\n    <>\n      {accountLoaded ? (\n        <Collapse\n          accordion\n          id=\"collapse\"\n          expandIconPosition=\"right\"\n          onChange={(e) => {\n            console.log(e);\n            setActivePanel(e);\n          }}\n        >\n          {Object.keys(account.userEmails).map((k) => {\n            const emails = account.userEmails[k].emails;\n            const folder_id = account.userEmails[k]._id;\n            const folderName = account.userEmails[k].name;\n\n            return (\n              <Panel\n                key={folder_id}\n                className={activePanel === folder_id ? \"activePanel\" : \"\"}\n                header={folderName}\n                forceRender={true}\n                style={{ padding: \"0px\" }}\n              >\n                {emails.map((email) => {\n                  return (\n                    <div key={email._id}>\n                      <WhiteSpace size=\"lg\" />\n                      <Card full>\n                        <Card.Header\n                          title={<h4>{email.title}</h4>}\n                          thumb={email.thumb}\n                          thumbStyle={{\n                            width: \"32px\",\n                            height: \"32px\",\n                            borderRadius: \"50%\",\n                          }}\n                          extra={\n                            <h6>{new Date(email.time).toLocaleTimeString()}</h6>\n                          }\n                        />\n                        <Card.Body>\n                          <div>{email.body}</div>\n                        </Card.Body>\n                        <Card.Footer\n                          extra={\n                            <Link\n                              to={{ pathname: `/account/${id}/${email._id}` }}\n                            >\n                              <Btn text=\"View\" />\n                            </Link>\n                          }\n                        />\n                      </Card>\n                    </div>\n                  );\n                })}\n              </Panel>\n            );\n          })}\n        </Collapse>\n      ) : (\n        <Spin />\n      )}\n    </>\n  );\n};\nexport default Account;\n","import { RightOutlined } from \"@ant-design/icons\";\nimport { Button, Space } from \"antd\";\nimport { Badge, List } from \"antd-mobile\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Item = List.Item;\n\nconst Home = ({ accounts, handleClick }) => {\n  return (\n    <div>\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <List>\n          {accounts.map((a, i) => {\n            return (\n              <Item\n                extra={\n                  <Space>\n                    <Badge>\n                      {\n                        a.userEmails[0].emails.filter((e) => {\n                          return e.isRead === false;\n                        }).length\n                      }\n                    </Badge>\n\n                    {/* <Link to=\"/account\"> */}\n\n                    <Link to={{ pathname: `/account/${i}` }}>\n                      <Button\n                        onClick={handleClick}\n                        type=\"primary\"\n                        shape=\"round\"\n                        icon={<RightOutlined />}\n                        size=\"small\"\n                        data={i}\n                      />\n                    </Link>\n                  </Space>\n                }\n                key={a._id}\n                user_id={a._id}\n                name={a.user_id}\n              >\n                {a.userEmail}\n              </Item>\n            );\n          })}\n        </List>\n      </Space>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { BottomNav, TopNav } from \"./components/navs\";\nimport { Account, Home } from \"./components/pages\";\nimport \"./css/App.css\";\nimport API from \"./data/API\";\n\nfunction App(props) {\n  const [unReads, setUnReads] = useState(0);\n  const [accounts, setAccount] = useState([]);\n\n  useEffect(() => {\n    API.getInitialAccounts()\n      .then((res) => {\n        setAccount(res);\n      })\n      .catch((err) => console.log(err));\n    return () => {\n      setAccount([]);\n    };\n  }, []);\n\n  useEffect(() => {\n    let count = 0;\n    let unReadEmails = [];\n    accounts.forEach((a) => {\n      unReadEmails = a.userEmails[0].emails.filter((email) => {\n        return email.isRead === false;\n      });\n      count += unReadEmails.length;\n    });\n\n    setUnReads(count);\n  }, [accounts]);\n\n  return (\n    <Router>\n      <div>\n        <TopNav unReads={unReads} />\n        <Switch>\n          <Route path=\"/account/:id\">\n            <Account />\n          </Route>\n          <Route path=\"/home\">\n            <Home accounts={accounts} />\n          </Route>\n          <Route path=\"/\">\n            <Home accounts={accounts} />\n          </Route>\n        </Switch>\n        <BottomNav />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport \"antd-mobile/dist/antd-mobile.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}