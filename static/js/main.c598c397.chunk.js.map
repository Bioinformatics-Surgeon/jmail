{"version":3,"sources":["components/buttons/Icon.js","components/buttons/Btn.js","components/HomeList.js","data/API.js","components/BottomNav.js","App.js","index.js"],"names":["SerachComp","Input","Search","allowClear","placeholder","style","width","styles","ml_1","marginLeft","mr_1","marginRight","searchBox","display","alignItems","Icon","badgeCount","icon","text","useState","showInput","setShowInput","iconComp","ReloadOutlined","onClick","window","location","reload","SearchOutlined","SettingOutlined","RightOutlined","MailOutlined","chooseIcon","direction","Object","assign","Btn","size","hasIcon","hasText","shape","type","Item","List","HomeList","accounts","map","acct","extra","userEmails","length","arrow","userEmail","_id","faker","require","getEmails","emails","i","Math","random","push","title","lorem","words","body","paragraph","from","name","findName","email","time","date","recent","isRead","boolean","data","uuid","accountName","userName","internet","BottomNav","backgroundColor","position","bottom","leftContent","rightContent","rightIcons","App","count","unReadEmails","unReads","setUnReads","API","useEffect","forEach","account","filter","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c598c397.chunk.js","sourcesContent":["import {\n  MailOutlined,\n  ReloadOutlined,\n  RightOutlined,\n  SearchOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { Badge } from \"antd-mobile\";\nimport React, { useState } from \"react\";\n\nimport { Input, Space } from \"antd\";\n\nconst { Search } = Input;\n\nconst SerachComp = () => {\n  return (\n    <Input allowClear placeholder=\"input search text\" style={{ width: 200 }} />\n  );\n};\n\nconst Icon = ({ badgeCount, icon, text = null }) => {\n  const noBadgeCount = badgeCount === undefined ? true : false;\n  const [showInput, setShowInput] = useState(false);\n  const iconComp = chooseIcon(icon);\n\n  function chooseIcon(icon) {\n    switch (icon) {\n      case \"reload\":\n        return (\n          <ReloadOutlined\n            onClick={() => {\n              window.location.reload();\n            }}\n            style={{ ...styles.ml_1 }}\n          />\n        );\n      case \"search\":\n        return (\n          <SearchOutlined\n            onClick={() => {\n              setShowInput(!showInput);\n            }}\n            style={{ ...styles.ml_1 }}\n          />\n        );\n      case \"settings\":\n        return <SettingOutlined style={{ ...styles.ml_1 }} />;\n      case \"rightOutline\":\n        return <RightOutlined style={{ ...styles.ml_1 }} />;\n      case \"mail\":\n        return <MailOutlined style={{ ...styles.mr_1 }} />;\n      default:\n        return <></>;\n    }\n  }\n\n  const getStyles = () => {\n    if (showInput) {\n      return Object.assign(styles.ml_1, styles.searchBox);\n    } else {\n      return { ...styles.ml_1 };\n    }\n  };\n\n  return (\n    <Space direction=\"horizontal\">\n      {showInput && <SerachComp />}\n      <Badge text={badgeCount} style={getStyles()}>\n        {text && text}\n        {iconComp}\n      </Badge>\n    </Space>\n  );\n};\n\nconst styles = {\n  ml_1: {\n    marginLeft: \"16px\",\n  },\n  mr_1: {\n    marginRight: \"16px\",\n  },\n  searchBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n};\n\nexport default Icon;\n","import { Button } from \"antd\";\nimport React from \"react\";\n\nconst Btn = ({ size = \"default\", icon, text, style }) => {\n  const hasIcon = icon ? true : false;\n  const hasText = text ? true : false;\n\n  return (\n    <Button size={size} style={{ ...style }} shape=\"round\" type=\"primary\">\n      {hasIcon && icon}\n      {hasText && text}\n    </Button>\n  );\n};\n\nexport default Btn;\n","import React from \"react\";\n\nimport { List } from \"antd-mobile\";\nimport faker from \"faker\";\n\nconst Item = List.Item;\n\nconst HomeList = ({ accounts }) => {\n  return (\n    <List>\n      {accounts.map((acct) => {\n        return (\n          <Item\n            extra={acct.userEmails.length}\n            arrow=\"horizontal\"\n            onClick={() => {}}\n            key={acct._id}\n          >\n            {acct.userEmail}\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default HomeList;\n","const faker = require(\"faker\");\n\nconst getRandomNum = () => {\n  return Math.random() * (50 - 10) + 10;\n};\n\nconst getEmails = () => {\n  let emails = [];\n\n  for (let i = 0; i < getRandomNum(); i++) {\n    emails.push({\n      _id: i,\n      title: faker.lorem.words(),\n      body: faker.lorem.paragraph(),\n      from: faker.name.findName(),\n      email: faker.lorem.paragraph(),\n      time: faker.date.recent(),\n      isRead: faker.random.boolean(),\n    });\n  }\n\n  return emails;\n};\n\nconst makeAccount = () => {\n  return {\n    _id: faker.random.uuid(),\n    accountName: faker.name.findName(),\n    userName: faker.internet.userName(),\n    userEmail: faker.internet.email(),\n    userEmails: getEmails(),\n  };\n};\n\nexport default {\n  getInitialAccounts: () => {\n    let data = [];\n    for (let i = 0; i < 3; i++) {\n      data.push(makeAccount());\n    }\n    return data;\n  },\n};\n","import React from \"react\";\nimport { NavBar } from \"antd-mobile\";\nimport { Icon, Btn } from \"./buttons\";\n\nconst BottomNav = () => {\n  return (\n    <NavBar\n      style={{\n        backgroundColor: \"#e4e8ec\",\n        position: \"fixed\",\n        bottom: 0,\n        width: \"100%\",\n      }}\n      leftContent={<Btn text=\"Account\" icon={<Icon icon=\"mail\" />} />}\n      rightContent={<Btn text=\"Edit\" />}\n    />\n  );\n};\n\nexport default BottomNav;\n","import { NavBar } from \"antd-mobile\";\nimport React, { useEffect, useState } from \"react\";\nimport { Icon, Btn } from \"./components/buttons\";\nimport HomeList from \"./components/HomeList\";\nimport \"./css/App.css\";\nimport API from \"./data/API\";\nimport { Space } from \"antd\";\nimport BottomNav from \"./components/BottomNav\";\n\nconst rightIcons = [\"search\", \"reload\", \"settings\"];\n\nfunction App() {\n  let count = 0;\n  let unReadEmails = [];\n  const [unReads, setUnReads] = useState(0);\n  const [accounts, setAccount] = useState(API.getInitialAccounts());\n\n  useEffect(() => {\n    accounts.forEach((account) => {\n      unReadEmails = account.userEmails.filter((email) => {\n        return email.isRead === false;\n      });\n      count += unReadEmails.length;\n    });\n\n    setUnReads(count);\n  }, [accounts]);\n\n  console.log(\"Acounts: \", accounts);\n  return (\n    <div>\n      <NavBar\n        style={{ backgroundColor: \"#000\" }}\n        leftContent={<Icon badgeCount={unReads} text=\"JQ Mail\" />}\n        rightContent={rightIcons.map((icon, i) => {\n          return <Icon key={i} icon={icon} />;\n        })}\n      />\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <HomeList accounts={accounts} />\n        <BottomNav />\n      </Space>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport \"antd-mobile/dist/antd-mobile.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}